<?xml version="1.0" encoding="utf-8"?>
<topic id="00a512e0-20a6-44c5-a074-90292eb3d15e" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>Automation project is the root element in the test editor, select it will show basic information about the current project.</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Actions</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>On the top of detailed view there are several buttons users can interact with</para>
        <list>
          <listItem>
            <para>Run all tests: Launch the test of the whole automation project</para>
          </listItem>
          <listItem>
            <para>Stop: When test is launched, stop the test execution.</para>
          </listItem>
          <listItem>
            <para>Report: View the test report or export the test report to a file (in APR format)</para>
          </listItem>
        </list>
        <alert class="note">
          Test reports can be generated at any time, you don’t need to run all tests before viewing and exporting test reports.
        </alert>
        <mediaLink>
          <image xlink:href="automation_project" placement="center"/>
        </mediaLink>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>

    <section>
      <title>
        Project Overview
      </title>
      <sections>
        <section address="SubSection1">
          <title>Project Information</title>
          <content>
            <para>Information related to creation date, saved date are displayed and the author of the automation project. </para>
            <para>Please note that author’s name is retrieved from the current user’s session, these values cannot be modified.</para>
          </content>
        </section>
        <section address="SubSection2">
          <title>Profile</title>
          <content>
            <para>You can edit the test profile, containing Test Settings, Credentials, System Variables and test environments related to your test automation project.</para>
            <list>
              <listItem>
                <para>
                  Use Active profile - To embed current active profile into the automation project, which means starting automation which the parameters you are using for manual tests.
                </para>
              </listItem>
              <listItem>
                <para>Load Profile – gives the possibility to load a test profile from another location.</para>
              </listItem>
              <listItem>
                <para>Edit profile – Edits the current profile embedded in the automation project.</para>
              </listItem>
            </list>
            <alert>
              By default, when creating a new automation project, the current copy of active profile will be embedded into the project. The settings changed on one side (either manual test or automation project) will not affect to other side.
            </alert>
          </content>
        </section>
        <section address="SubSection2">
          <title>List of test suites</title>
          <content>
            Here you can find all the test suites of the current automation project.
          </content>
        </section>
      </sections>
    </section>

    <section>
      <title>Custom Variables</title>
      <content>
        <para>
          Custom variables holds variables declared by the user. The variables declared in the Project level can be accessed in the whole automation project level.
        </para>
        <alert>
          In Hummingbird test framework, variables can be declared and used at any level: Project, Test Suite, Test Case and Test Step.
        </alert>
      </content>
    </section>

    <section>
      <title>Runtime variables</title>
      <content>
        <para>
          Runtime variables cannot be declared by the user. They are declared and assigned by the automation script itself. For example, for Data Generator, Data Driven Test Case.
        </para>
        <para>
          Runtime variables are more priority than Custom Variables. When there are variables of the same name in both Custom Variables and Runtime Variables, the value from Runtime variables will be used.
        </para>
      </content>
    </section>

    <section>
      <title>Variable rules</title>
      <content>
        <para>Automation engine will use the variable following the rules described as below:</para>
       
        <para>
          1. Variables are private, and can be accessed only in its scope. For example, Variables declared in the Test Case can be accessed in all its Test Steps, but cannot be accessed from its container Test Suite or another Test Case.
        </para>
        <para>
          2. Variables are retrieved from the nearest level when there are more than one variables having the same name. For example: If the variables of the same name is declared in Test Suite and Test Case, for a Test Step, the one declared in Test Case will be used.
        </para>
        <para>
          3. For the same level, runtime (script defined) variables are more priority than custom (user defined) variables
        </para>
      </content>
    </section>
    
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
