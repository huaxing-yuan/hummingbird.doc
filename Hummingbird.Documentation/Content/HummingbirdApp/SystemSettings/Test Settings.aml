<?xml version="1.0" encoding="utf-8"?>
<topic id="82e437e1-c9bf-449f-8ed3-28859423e766" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <para>
        Test Settings lets you to configure the behavior of test framework for manual tests. including parameters for all services, System Variables, Customer Variables, Test Environments and Credentials.
      </para>
      <alert class="note">
        <para>
          If you have multiple test profiles, you can create, duplicated, edit and switch active profiles in <link xlink:href="def45c86-9ffa-4692-85bf-ef997b501e27" />.
        </para>
        <para>Test Settings reflects always to the current Active Profile. </para>
      </alert>
      <autoOutline />
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="service">
      <!--h2-->
      <title>Service settings</title>
      <content>

        <para>
          In this section you can change the configuration of service
          simulation services, such as adjust the TCP port used to expose simulated
          services, queue length, maximum connections, etc. for ordinary usage, you don’t
          need to change these settings. But when performance test is planned,
          you may need to increase max queue length and thread count to allow more parallel connections.
        </para>
      </content>
    </section>


    <section address="_Toc515307900">
      <!--h3-->
      <title>System variables</title>
      <content>

        <para>
          System variables are variables declared in simulated
          services, usually they are environment dependent values such as service Host
          Name, Port, Uri, Path or other tokens. You need to set these variables for each
          test environment declared.
        </para>

      </content>
    </section>

    <section address="_Toc515307901">
      <!--h3-->
      <title>Custom variables</title>
      <content>

        <para>
          Custom variables are defined by user and can be used to
          replace tokens in Requests, Replies and some automated test steps. Values of
          custom variable are also environment dependent, which means you need to assign
          a value for each test environment.
        </para>

      </content>
    </section>

    <section address="_Toc515307902">
      <!--h3-->
      <title>Credentials</title>
      <content>

        <para>
          Credentials stores the user name password used to
          authenticate yourself when calling a service. For example, for those service
          protected by Basic Authentication and Digest Authentication.
        </para>

        <para>
          If the service uses Windows Integrated Authentication, NTLM
          or Kerberos, you don’t need to set credentials here, these kind of
          authentication uses your Windows Identity automatically. Make sure your windows
          identity have access to the target service.
        </para>

        <para>
          All test settings will be stored in a Profile, which you can
          export for another user or embedded in an automated test project.
        </para>

      </content>
    </section>

    <section address="_Toc515307903">
      <!--h3-->
      <title>Define Test Environments</title>
      <content>

        <para>
          In test settings, you are able to define one or more test
          environments. For each test environment, set values for system variables,
          custom variables and credentials.
        </para>

        <mediaLink>
          <image xlink:href="image022" />
        </mediaLink>

      </content>
    </section>


    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
