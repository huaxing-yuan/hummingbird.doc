<?xml version="1.0" encoding="utf-8"?>
<topic id="a28565f7-10ec-48ca-9251-efd6cab90c8d" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>Hummingbird adopted the latest development standard and DevOps concept. We update the software with minor or major changes through two different distribution canal: Nightly Version and Stable Version.</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Nightly version</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>Nightly version is update very frequently, we try to make several updates per week to let you preview the latest features, evolutions or the bug fix.</para>
        <para>All releases in Nightly canal are tested manually for new features and controlled by automated regression tests to ensure the basic stability of the software.</para>
        <para>Meanwhile, nightly version is from development code branch and it may contains new bugs, please kindly report bugs so we can fix it as quick as possible.</para>
        <para>For the developers of extensions. For each release of nightly version, the package of Hummingbird Test Framework is also updated. If you are using NuGet, you can also find the latest package of Test Framework tagged with a -prerelease suffix. If you want to work with the latest version of the test framework, including pre-release versions, please check “include pre-release versions” in NuGet Package Manager</para>
      </content>
    </section>

    <section address="Section2">
      <title>Stable version</title>
      <content>
        <para>Stable versions are updated every one or two months. They are aimed to deliver major changes with a higher level of stabilization (means less bugs than nightly version). If you planned to use Hummingbird in an enterprise routine environment, it is recommend to use the stable version.</para>
        <para>Stable version may have a delay of one or two months after the new features can be used in nightly version.</para>
      </content>
    </section>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
